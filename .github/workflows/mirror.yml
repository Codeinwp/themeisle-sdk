name: Mirror Main Branch and Tags

on:
  push:
    branches:
      - master
    tags:
      - "*"
  workflow_dispatch:
jobs:
  mirror:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Remove specific folder
        run: |
          rm -rf .github
          rm -rf CHANGELOG.md
          git rm -r --cached .github || true
          git rm -r --cached CHANGELOG.md || true

      - name: Push main branch and tags to mirror repo
        env:
          GIT_AUTHOR_NAME: "pirate-bot"
          GIT_AUTHOR_EMAIL: ${{ secrets.BOT_EMAIL }}
          GIT_COMMITTER_NAME: "pirate-bot"
          GIT_COMMITTER_EMAIL: ${{ secrets.BOT_EMAIL }}
        run: |
          git remote add mirror "https://${{ secrets.BOT_TOKEN }}@github.com/Codeinwp/themeisle-sdk"
          
          # Reset to a single commit with no history
          git checkout master
          git reset --soft $(git rev-list --max-parents=0 HEAD)  # Go to the first commit, keeping changes 
          git commit --amend --author="pirate-bot <${{ secrets.BOT_EMAIL }}>" -m "new changes [skip ci]"  # Create a single commit with explicit author
          
          
          # Push to the mirror repo, overwriting history
          git push mirror master --force  # Push only the master branch with new history
          
          # Fetch all tags from the target repository
          git fetch mirror --tags
           
      
          # Fetch tags from the source repository and recreate them as lightweight tags
          git fetch --tags "https://${{ secrets.BOT_TOKEN }}@github.com/Codeinwp/themeisle-sdk-main"
          for tag in $(git tag); do
              # Check if the tag exists in the mirror repository
              if ! git rev-parse "refs/remotes/mirror/tags/$tag" >/dev/null 2>&1; then
                  # Tag does not exist in mirror, so create it
                  commit_hash=$(git rev-list -n 1 "$tag")  # Get the commit hash for each tag 
                  git tag -a "$tag" "$commit_hash" -m "New Release"  # Annotated tag with custom message
              else
                  echo "Tag $tag already exists in mirror repository. Skipping..."
              fi
          done
      
          # Push lightweight tags to the target repository
          git push mirror --tags
      - name: Sync releases from source to target repo
        run: |
          # Fetch all releases from the source repository
          releases=$(curl -s -H "Authorization: token ${{ secrets.BOT_TOKEN }}" \
                    "https://api.github.com/repos/Codeinwp/themeisle-sdk-main/releases")
          
          # Loop through each release and create it in the target repository
          for row in $(echo "${releases}" | jq -r '.[] | @base64'); do
            _jq() {
              echo ${row} | base64 --decode | jq -r ${1}
            }
          
            tag_name=$(_jq '.tag_name')
            release_name=$(_jq '.name')
            draft=$(_jq '.draft')
            prerelease=$(_jq '.prerelease')
          
            # Create the release in the target repository
            curl -s -X POST -H "Authorization: token ${{ secrets.BOT_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/Codeinwp/themeisle-sdk-main/releases \
              -d "{
                \"tag_name\": \"${tag_name}\",
                \"name\": \"${release_name}\",
                \"body\": \"\",
                \"draft\": ${draft},
                \"prerelease\": ${prerelease}
              }"
          done